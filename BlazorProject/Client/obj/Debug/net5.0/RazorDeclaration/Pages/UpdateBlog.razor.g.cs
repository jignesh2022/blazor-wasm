// <auto-generated/>
#pragma warning disable 1591
#pragma warning disable 0414
#pragma warning disable 0649
#pragma warning disable 0169

namespace BlazorProject.Client.Pages
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Components;
#nullable restore
#line 1 "G:\VS2019 Projects\BlazorWebAssemblyDemo\BlazorProject\Client\_Imports.razor"
using System.Net.Http;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "G:\VS2019 Projects\BlazorWebAssemblyDemo\BlazorProject\Client\_Imports.razor"
using System.Net.Http.Json;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "G:\VS2019 Projects\BlazorWebAssemblyDemo\BlazorProject\Client\_Imports.razor"
using Microsoft.AspNetCore.Components.Forms;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "G:\VS2019 Projects\BlazorWebAssemblyDemo\BlazorProject\Client\_Imports.razor"
using Microsoft.AspNetCore.Components.Routing;

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "G:\VS2019 Projects\BlazorWebAssemblyDemo\BlazorProject\Client\_Imports.razor"
using Microsoft.AspNetCore.Components.Web;

#line default
#line hidden
#nullable disable
#nullable restore
#line 6 "G:\VS2019 Projects\BlazorWebAssemblyDemo\BlazorProject\Client\_Imports.razor"
using Microsoft.AspNetCore.Components.Web.Virtualization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 7 "G:\VS2019 Projects\BlazorWebAssemblyDemo\BlazorProject\Client\_Imports.razor"
using Microsoft.AspNetCore.Components.WebAssembly.Http;

#line default
#line hidden
#nullable disable
#nullable restore
#line 8 "G:\VS2019 Projects\BlazorWebAssemblyDemo\BlazorProject\Client\_Imports.razor"
using Microsoft.JSInterop;

#line default
#line hidden
#nullable disable
#nullable restore
#line 9 "G:\VS2019 Projects\BlazorWebAssemblyDemo\BlazorProject\Client\_Imports.razor"
using BlazorProject.Client;

#line default
#line hidden
#nullable disable
#nullable restore
#line 10 "G:\VS2019 Projects\BlazorWebAssemblyDemo\BlazorProject\Client\_Imports.razor"
using BlazorProject.Client.Shared;

#line default
#line hidden
#nullable disable
#nullable restore
#line 11 "G:\VS2019 Projects\BlazorWebAssemblyDemo\BlazorProject\Client\_Imports.razor"
using Radzen;

#line default
#line hidden
#nullable disable
#nullable restore
#line 12 "G:\VS2019 Projects\BlazorWebAssemblyDemo\BlazorProject\Client\_Imports.razor"
using Radzen.Blazor;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "G:\VS2019 Projects\BlazorWebAssemblyDemo\BlazorProject\Client\Pages\UpdateBlog.razor"
using BlazorProject.Shared;

#line default
#line hidden
#nullable disable
#nullable restore
#line 7 "G:\VS2019 Projects\BlazorWebAssemblyDemo\BlazorProject\Client\Pages\UpdateBlog.razor"
using Newtonsoft.Json;

#line default
#line hidden
#nullable disable
#nullable restore
#line 8 "G:\VS2019 Projects\BlazorWebAssemblyDemo\BlazorProject\Client\Pages\UpdateBlog.razor"
using Newtonsoft.Json.Linq;

#line default
#line hidden
#nullable disable
    [Microsoft.AspNetCore.Components.RouteAttribute("/updateblog/{BlogId:int}")]
    public partial class UpdateBlog : Microsoft.AspNetCore.Components.ComponentBase, IDisposable
    {
        #pragma warning disable 1998
        protected override void BuildRenderTree(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder __builder)
        {
        }
        #pragma warning restore 1998
#nullable restore
#line 39 "G:\VS2019 Projects\BlazorWebAssemblyDemo\BlazorProject\Client\Pages\UpdateBlog.razor"
       

    [Parameter]
    public int BlogId { get; set; }

    public string HTMLContent { get; set; }
    Blog BlogModel = new Blog();
    private string display { get; set; } = "none";

    private ResponseDTO rdto;

    protected override async Task OnInitializedAsync()
    {
        if (UserState.UserObj == null)
        {
            NavigationManager.NavigateTo("/login");
        }

        rdto = await BlogService.GetBlog(BlogId);
        if (rdto.StatusCode == 200)
        {
            BlogModel = ((JObject)rdto.Data).ToObject<Blog>();
        }
        else if (rdto.StatusCode == 403)
        {
            await Logout(rdto.Message);
        }
        else
        {
            await JSRuntime.InvokeVoidAsync("showMessage", "info", rdto.Message);

        }

    }

    ////EventConsole console;

    void OnPaste(HtmlEditorPasteEventArgs args)
    {
        //  console.Log($"Paste: {args.Html}");
    }

    void OnChange(string html)
    {
        //console.Log($"Change: {html}");
    }

    void OnExecute(HtmlEditorExecuteEventArgs args)
    {
        //console.Log($"Execute: {args.CommandName}");
    }

    private async Task ValidSubmit()
    {
        display = "block";
        Blog updated = null;
        ResponseDTO rdto = await BlogService.UpdateBlog(BlogModel);
        display = "none";

        if (rdto.StatusCode == 200)
        {
            updated = ((JObject)rdto.Data).ToObject<Blog>();
        }
        else if (rdto.StatusCode == 403)
        {
            await Logout(rdto.Message);
        }
        else
        {
            await JSRuntime.InvokeVoidAsync("showMessage", "info", rdto.Message);

        }



        if (updated != null)
        {
            await JSRuntime.InvokeVoidAsync("showMessage", "success", "Blog updated successfully.");
            NavigationManager.NavigateTo("/viewblog/" + updated.BlogId);
        }
        else
        {
            await JSRuntime.InvokeVoidAsync("showMessage", "danger", "Some error.");
        }
    }

    private async Task InvalidSubmit()
    {
        await JSRuntime.InvokeVoidAsync("showMessage", "danger", "Invalid submit.");
        //Console.WriteLine("Invalid FORM SUBMIT LOGIN");
    }

    private async Task Logout(string message)
    {
        UserState.SetToken(null);
        UserState.SetUser(null);
        await JSRuntime.InvokeVoidAsync("showMessage", "danger", message);
        NavigationManager.NavigateTo("/");
    }

    protected override Task OnAfterRenderAsync(bool firstRender)
    {
        UserState.OnChange += StateHasChanged;
        return base.OnAfterRenderAsync(firstRender);
    }

    public void Dispose()
    {
        UserState.OnChange -= StateHasChanged;
    }



#line default
#line hidden
#nullable disable
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private IJSRuntime JSRuntime { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private Services.IBlogService BlogService { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private NavigationManager NavigationManager { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private StateManagement.UserState UserState { get; set; }
    }
}
#pragma warning restore 1591
